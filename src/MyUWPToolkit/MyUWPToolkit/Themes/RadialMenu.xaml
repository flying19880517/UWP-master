<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyUWPToolkit.RadialMenu"
    xmlns:converters="using:MyUWPToolkit.Converters"
    >
    <converters:VisibilityConverter x:Key="VisibilityConverter"/>
    <Style TargetType="local:RadialMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadialMenuItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="ExpandButtonPointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PointerOverElement"  Storyboard.TargetProperty="StrokeThickness" Duration="0" To="{Binding Menu.PointerOverElementThickness,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandIconTranslateTransform" Storyboard.TargetProperty="Y" Duration="0" To="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandButton" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{Binding Stroke,ElementName=PointerOverElement}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IsSelected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedElement"  Storyboard.TargetProperty="StrokeThickness" Duration="0" To="{Binding Menu.SelectedElementThickness,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter RenderTransformOrigin="0.5,0.5" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="{Binding ContentAngle, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Path x:Name="ColorElement"
                            StrokeThickness="{Binding ArcSegments.ColorElement.StrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"   
                              >
                            <Path.Stroke>
                                <SolidColorBrush Color="{Binding Color,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Path.Stroke>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.ColorElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ArcSegment Point="{Binding ArcSegments.ColorElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.ColorElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Path x:Name="SelectedElement" StrokeThickness="0" Stroke="{Binding Menu.SelectedElementBackground, RelativeSource={RelativeSource TemplatedParent}}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.SelectedElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ArcSegment Point="{Binding ArcSegments.SelectedElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.SelectedElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Path x:Name="HitTestElement" Stroke="#01010101"
                            StrokeThickness="{Binding ArcSegments.HitTestElement.StrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"   
                              >
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.HitTestElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ArcSegment Point="{Binding ArcSegments.HitTestElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.HitTestElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Grid x:Name="ExpandButtonArea">
                            <!--ExpandButtonArea-->
                            <Path x:Name="PointerOverElement" StrokeThickness="0" Stroke="{Binding Menu.ExpandButtonPointerOverBackground,RelativeSource={RelativeSource TemplatedParent}}">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.PointerOverElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                            <ArcSegment Point="{Binding ArcSegments.PointerOverElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.PointerOverElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <Path x:Name="ExpandButton" Stroke="{Binding Menu.ExpandButtonBackground,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="{Binding Menu.ExpandAreaThickness,RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.ExpandArea.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                            <ArcSegment Point="{Binding ArcSegments.ExpandArea.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.ExpandArea.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <FontIcon x:Name="ExpandIcon" Glyph="&#xE0A0;" Visibility="{Binding HasItems,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource VisibilityConverter}}" IsHitTestVisible="False" VerticalAlignment="Top" FontSize="12" FontFamily="Segoe UI Symbol">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform x:Name="ExpandIconTranslateTransform" Y="{Binding ArcSegments.ExpandArea.ExpandIconY,RelativeSource={RelativeSource TemplatedParent}}"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                            <!--ExpandButtonArea-->
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="local:RadialColorMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadialColorMenuItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="ExpandButtonPointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PointerOverElement"  Storyboard.TargetProperty="StrokeThickness" Duration="0" To="{Binding Menu.PointerOverElementThickness,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandIconTranslateTransform" Storyboard.TargetProperty="Y" Duration="0" To="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandButton" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{Binding Stroke,ElementName=PointerOverElement}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="ColorElement"
                            StrokeThickness="{Binding ArcSegments.ColorElement.ColorElementStrokeThickness,RelativeSource={RelativeSource TemplatedParent}}"   
                              >
                            <Path.Stroke>
                                <SolidColorBrush Color="{Binding Color,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Path.Stroke>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.ColorElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ArcSegment Point="{Binding ArcSegments.ColorElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.ColorElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Path x:Name="SelectedElement" Stroke="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                              StrokeThickness="{Binding Menu.SelectedElementThickness,RelativeSource={RelativeSource TemplatedParent}}"   
                              >
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.SelectedElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ArcSegment Point="{Binding ArcSegments.SelectedElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.SelectedElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <Grid x:Name="ExpandButtonArea" Visibility="{Binding HasItems,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource VisibilityConverter}}">
                            --><!--ExpandButtonArea--><!--
                            <Path x:Name="PointerOverElement" StrokeThickness="0" >
                                <Path.Stroke>
                                    <SolidColorBrush Color="{Binding Color,RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Path.Stroke>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.PointerOverElement.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                            <ArcSegment Point="{Binding ArcSegments.PointerOverElement.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.PointerOverElement.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <Path x:Name="ExpandButton" Stroke="{Binding Menu.ExpandButtonBackground,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="{Binding Menu.ExpandAreaThickness,RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsFilled="False" IsClosed="False" StartPoint="{Binding ArcSegments.ExpandArea.StartPoint,RelativeSource={RelativeSource TemplatedParent}}">
                                            <ArcSegment Point="{Binding ArcSegments.ExpandArea.EndPoint,RelativeSource={RelativeSource TemplatedParent}}" Size="{Binding ArcSegments.ExpandArea.Size,RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <FontIcon x:Name="ExpandIcon" Glyph="&#xE0A0;" IsHitTestVisible="False" VerticalAlignment="Top" FontSize="12" FontFamily="Segoe UI Symbol">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform x:Name="ExpandIconTranslateTransform" Y="{Binding ArcSegments.ExpandArea.ExpandIconY,RelativeSource={RelativeSource TemplatedParent}}"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                            --><!--ExpandButtonArea--><!--
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="local:RadialMenuNavigationButton">
        <Setter Property="Content" Value="&#xE115;"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Background" Value="#466666"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadialMenuNavigationButton">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!--<VisualState x:Name="Normal">
                                    <Storyboard>
                                        
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        --><!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>--><!--
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        --><!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>--><!--
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                   Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                                <VisualState x:Name="Expand">
                                  
                                </VisualState>
                                <VisualState x:Name="Collapse">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                   Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="BackgroundElement" StrokeThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <ContentPresenter x:Name="ContentPresenter"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Content="{TemplateBinding Content}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          AutomationProperties.AccessibilityView="Raw"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RadialMenu">
        <Setter Property="Width" Value="260"/>
        <Setter Property="Height" Value="260"/>
        <Setter Property="MinWidth" Value="260"/>
        <Setter Property="MinHeight" Value="260"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ExpandButtonBackground" Value="{ThemeResource ButtonBackground}"/>
        <Setter Property="ExpandButtonPointerOverBackground" Value="#466666"/>
        <Setter Property="SelectedElementBackground" Value="#608B8B"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadialMenu">
                    <Grid>
                        <Grid x:Name="ContentGrid">
                            <Ellipse Fill="{TemplateBinding Background}"  Stroke="{ThemeResource ButtonBackground}" StrokeThickness="{TemplateBinding ExpandAreaThickness}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            <local:RadialMenuItemsPresenter x:Name="CurrentItemPresenter"
                             ItemsSource="{Binding CurrentItem.Items,RelativeSource={RelativeSource TemplatedParent}}" 
                                                       >
                                <!--ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                        ItemTemplate="{TemplateBinding ItemTemplate}"-->
                                <local:RadialMenuItemsPresenter.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <local:RadialMenuPanel/>
                                    </ItemsPanelTemplate>
                                </local:RadialMenuItemsPresenter.ItemsPanel>
                            </local:RadialMenuItemsPresenter>
                        </Grid>
                        <local:RadialMenuNavigationButton x:Name="NavigationButton"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
